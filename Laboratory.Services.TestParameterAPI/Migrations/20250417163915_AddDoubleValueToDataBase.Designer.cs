// <auto-generated />
using System;
using Laboratory.Services.TestParameterAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Laboratory.Services.TestParameterAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250417163915_AddDoubleValueToDataBase")]
    partial class AddDoubleValueToDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Laboratory.Services.TestParameterAPI.Models.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("ALP")
                        .HasColumnType("float");

                    b.Property<double?>("ALT")
                        .HasColumnType("float");

                    b.Property<double?>("AST")
                        .HasColumnType("float");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<double?>("Albumin")
                        .HasColumnType("float");

                    b.Property<string>("Appearance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bacteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BileSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bilirubin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BreakFastSample")
                        .HasColumnType("float");

                    b.Property<double?>("CReactiveProtein")
                        .HasColumnType("float");

                    b.Property<string>("Casts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CholHDLRatio")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CollectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Crystals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DinnerSample")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Eosinophils")
                        .HasColumnType("float");

                    b.Property<string>("EpithelialCells")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Esr1stHour")
                        .HasColumnType("float");

                    b.Property<double?>("EstimateGfr")
                        .HasColumnType("float");

                    b.Property<double?>("FastingBloodGlucose")
                        .HasColumnType("float");

                    b.Property<double?>("GGT")
                        .HasColumnType("float");

                    b.Property<double?>("Globulin")
                        .HasColumnType("float");

                    b.Property<double?>("Glucose")
                        .HasColumnType("float");

                    b.Property<double?>("HCT")
                        .HasColumnType("float");

                    b.Property<double?>("HDL")
                        .HasColumnType("float");

                    b.Property<double?>("Haemoglobin")
                        .HasColumnType("float");

                    b.Property<double?>("Hb")
                        .HasColumnType("float");

                    b.Property<string>("Ketones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("LD")
                        .HasColumnType("float");

                    b.Property<double?>("LDL")
                        .HasColumnType("float");

                    b.Property<int?>("LabNumber")
                        .HasColumnType("int");

                    b.Property<double?>("LunchSample")
                        .HasColumnType("float");

                    b.Property<double?>("Lymphocytes")
                        .HasColumnType("float");

                    b.Property<double?>("MCH")
                        .HasColumnType("float");

                    b.Property<double?>("MCV")
                        .HasColumnType("float");

                    b.Property<double?>("MPV")
                        .HasColumnType("float");

                    b.Property<double?>("Neutrophils")
                        .HasColumnType("float");

                    b.Property<string>("Nitrite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NonHDLChol")
                        .HasColumnType("float");

                    b.Property<string>("PH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PlateletCount")
                        .HasColumnType("float");

                    b.Property<double?>("PostPrandialBloodSugar")
                        .HasColumnType("float");

                    b.Property<double?>("Potassium")
                        .HasColumnType("float");

                    b.Property<string>("Protien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PusCells")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RBC")
                        .HasColumnType("float");

                    b.Property<double?>("RandomBloodSugar")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RedBloodCells")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RefNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReportedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RhematoidFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RheumatoidFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SCreatinine")
                        .HasColumnType("float");

                    b.Property<double?>("SCreningSltdeMethod")
                        .HasColumnType("float");

                    b.Property<string>("SalmonellaParaTyphlI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalmonellaTyphl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalmonellaTyphlH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SgotAST")
                        .HasColumnType("float");

                    b.Property<double?>("SgptALT")
                        .HasColumnType("float");

                    b.Property<double?>("Sodium")
                        .HasColumnType("float");

                    b.Property<double?>("SpecificGravity")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCholesterol")
                        .HasColumnType("float");

                    b.Property<double?>("TotalProtein")
                        .HasColumnType("float");

                    b.Property<double?>("Triglycerides")
                        .HasColumnType("float");

                    b.Property<string>("Urobilinogen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("WBC")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
